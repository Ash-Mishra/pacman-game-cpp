#include<graphics.h>
#include "GHOST.h"
#include"MAP.h"
extern ghost pinky,inky, blinky;
void ghost::update_pos(pm &pac)
{
	int i, offset=0, d1,d2;
	//if(this==&pinky) offset= 60;
	//	else if(this==&inky) offset= -60;
	if(mode==0)
	{
		tx=pac.getposx()+offset;
		ty=pac.getposy()+offset;
	}
		else if(mode==1)
		{
			if(this==&blinky) tx=ty=700;
				if(this==&pinky) {tx=20;ty=460;}
					else if(this==&inky) {tx=620;ty=20;}
		}
			else if(mode==2)
			{
					tx=SCREEN_W-pac.getposx()+offset;
					ty=SCREEN_H-pac.getposy()+offset;
			}	
	if((dist(x+5,y,tx,ty)>dist(x-5,y,tx,ty)) && xspeed!=GM_SPEED)
	{
		xspeed=-GM_SPEED; 
		for(i=0;i<=r;i++)
			if(getpixel(x-r-1,y+i)==9 || getpixel(x-r-1,y-i)==9) xspeed=0;
		d1=dist(x-5,y,tx,ty);
	}
	if(dist(x+5,y,tx,ty)<dist(x-5,y,tx,ty) && xspeed!=-GM_SPEED)
	{
		xspeed=GM_SPEED;
		for(i=0;i<=r;i++)
			if(getpixel(x+r+1,y+i)==9 || getpixel(x+r+1,y-i)==9) xspeed=0;
		d1=	dist(x+5,y,tx,ty);
	}
	if(dist(x,y+5,tx,ty)>dist(x,y-5,tx,ty)) && yspeed!=GM_SPEED)
	{
		yspeed=-GM_SPEED;
		for(i=0;i<=r;i++)
			if(getpixel(x+i,y-r-1)==9 || getpixel(x-i,y-r-1)==9) yspeed=0;
		d2-dist(x,y-5,tx,ty);
	}
	if(dist(x,y+5,tx,ty)<dist(x,y-5,tx,ty) && yspeed!=-GM_SPEED)
 	{
		yspeed=GM_SPEED;
		for(i=0;i<=r;i++)
			if(getpixel(x+i,y+r+1)==9 || getpixel(x-i,y+r+1)==9) yspeed=0;
		d2-dist(x,y+5,tx,ty);	
	}
	predir=dir;
	if(xspeed!=0 && yspeed!=0)
	{
		if(d1<d2) yspeed=0;
			else xspeed=0;
	}
	if(xspeed>0) dir=RIGHT;
		else if(xspeed<0) dir=LEFT;
	if(yspeed>0) dir=DOWN;
		else if(yspeed<0) dir=UP;
	cout<<blinky.xspeed<<','<<blinky.yspeed<<"\r";
	x+=xspeed;
	y+=yspeed;
}
void ghost::draw_gh(short a)
{
	if(!doa) draw_ghbody(a);
	setfillstyle(1,15);
	setcolor(15);
	for(int i=-r/3;i<=r/3;i+=(r*2)/3)
	{
		circle(x+i,y-1,2);
		floodfill(x+i,y-1,15);
		setfillstyle(1,1);
		//setcolor(1);
		switch(dir)
		{
			case LEFT :	circle(x+i-1,y-1,1);
					       //	floodfill(x+i-1,y-1,1);
						break;
			case RIGHT:	circle(x+i+1,y-1,1);
					       //	floodfill(x+i+1,y-1,1);
						break;
			case UP   :	circle(x+i,y-2,1);
					       //	floodfill(x+i,y-2,1);
						break;
			case DOWN : circle(x+i,y,1);
					     //	floodfill(x+i,y,1);
						break;
		}

	}
}
void ghost::draw_ghbody(short &a)
{
	int drawpts[18]={x-r,y,x+r,y,x+r-a,y+r,x+(2*r)/3,y+r/2,x+r/3-a,y+r,x,y+r/2,x-r/3+a,y+r,x-(2*r)/3,y+r/2,x-r+a,y+r};
	setfillstyle(1,col);
	setcolor(col);
	sector(x,y,359,1,r,r-r/4);
	fillpoly(9, drawpts);
}

